Create Database  Case_Study 

Select * from fact 
Select * from Location
Select * from Product



--1.Display the number of states present in the LocationTable.
Select Count(Distinct(State)) from Location 

--2. How many products are of regular type?
Select Count(Product) from product where type = 'Regular' 

--3. How much spending has been done on marketing of product ID 1?
Select Sum(Marketing) from
Fact as A  inner join Product as B
on A.PRoductID = B.ProductID  group by  A.ProductID 
having A.ProductID = 1

--4. What is the minimum sales of a product?
Select productID,Min(Sales) from Fact  group by productID order by PRoductID

--5. Display the max Cost of Good Sold (COGS). 
Select MAX(COGS) from Fact 

--6. Display the details of the product where product type is coffee.
Select * from Product where "Product Type" = 'Coffee'

--7. Display the details where total expenses are greater than 40. 
Select * from Fact where "Total Expenses" > 40 
  
--8. What is the average sales in area code 719?
Select AVG(Sales) from Fact where "Area Code" = 719

--9. Find out the total profit generated by Colorado state.
Select Sum(Profit) from Fact as A 
join Location as B on A.[Area Code] = B.[Area Code] 
where B.State  = 'Colorado'

--10. Display the average inventory for each product ID. 
Select  Avg(Inventory) from Fact 

--11. Display state in a sequential order in a Location Table.
Select Distinct(State) from Location order by State 

--12. Display the average budget of the Product where the average budget margin should be greater than 100. 
Select Avg ("Budget Margin")from Fact where "Budget Margin" >100

--13. What is the total sales done on date 2010-01-01?
Select Sum(Sales) from Fact where date  = '2010-01-01'

Select * from Fact
--14. Display the average total expense of each product ID on an individual date.
Select ProductId,date,Avg("Total Expenses") from Fact group by productID,date order by productID ,date

--15. Display the table with the following attributes such as date, productID, product_type, product, sales, profit, state, area_code. 
Select date, P.productID, P."product type", P.product, F.sales, F.profit, L.state, L."area code"
from Fact as F  join Product as P  on F.ProductId = P.ProductId
join Location as L on F."Area Code" = L."Area Code"

--16. Display the rank without any gap to show the sales wise rank. 
Select 
Dense_rank() over( order by Sum(Sales) desc) as Rank , ProductID, Sum(Sales) as Sales  from Fact 
group by productID


--17. Find the state wise profit and sales.
Select State, 
Sum(Profit) as Profit, 
Sum(Sales) as "Sales " from Location as L 
join fact as F 
on L."Area Code" = F."Area Code"
group by State


--18. Find the state wise profit and sales along with the productname. 
Select P.Product,L.State, 
Sum(Profit) as Profit, 
Sum(Sales) as "Sales " from Location as L 
join fact as F on L."Area Code" = F."Area Code"
join  Product as P on P.PRoductId = F.ProductID
group by L.State,P.Product

--19. If there is an increase in sales of 5%, calculate the increasedsales
Select Sales, (Sales + Sales * 5/100) as Increased_Sales  from Fact


--20. Find the maximum profit along with the product ID and producttype.
Select P."Product type", P.ProductID,
Max(Profit) as Profit from 
 fact as F join Product as P on P.PRoductId = F.ProductID
 group by  P."Product type", P.ProductID


--21. Create a stored procedure to fetch the result according to the product type from Product Table.
Create Procedure Producttype @type varchar(10) 
As
Select * from Product 
where "Product type" = @type
GO 

EXEC Producttype @type = 'Coffee'


--22. Write a query by creating a condition in which if the total expenses is less than 60 then it is a profit or else loss. 
Select *,
Case 
when "Total Expenses" < 60  then 'Profit'
else 'Loss' 
end as Profit_or_Loss
from Fact

--23. Give the total weekly sales value with the date and product ID details. Use roll-up to pull the data in hierarchical order. 
--24. Apply union and intersection operator on the tables which consist of attribute area code. 
Select "Area Code" from Fact union Select "Area Code" from Location 
Select "Area Code" from Fact intersect Select "Area Code" from Location 


--25. Create a user-defined function for the product table to fetch a particular product type based upon the userâ€™s preference. 
--26. Change the product type from coffee to tea where product ID is 1 and undo it. 
UPDATE product
SET "product type" = 'tea'
WHERE productid = 1;

UPDATE product
SET "product type" = 'coffee'
WHERE productid = 1;


--27. Display the date, product ID and sales where total expenses are between 100 to 200. 
Select Date, ProductID ,Sales from Fact where  "Total Expenses" between 100 and 200

--28. Delete the records in the Product Table for regular type.
DELETE FROM Product
WHERE "Product Type" = 'regular';

 --29. Display the ASCII value of the fifth character from the column Product.
Select ASCII(Product) from Product 


